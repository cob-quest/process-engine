stages:          # List of stages for jobs, and their order of execution
  - Test
  - Build and Release
  - Update Chart

lint:
  stage: Test
  image: registry.gitlab.com/gitlab-org/gitlab-build-images:golangci-lint-alpine
  script:
    # Use default .golangci.yml file from the image if one is not present in the project root.
    - '[ -e .golangci.yml ] || cp /golangci/.golangci.yml .'
    # Write the code coverage report to gl-code-quality-report.json
    # and print linting issues to stdout in the format: path/to/file:line description
    # remove `--issues-exit-code 0` or set to non-zero to fail the job if linting issues are detected
    - golangci-lint run --issues-exit-code 0 --print-issued-lines=false --out-format code-climate:gl-code-quality-report.json,line-number
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    paths:
      - gl-code-quality-report.json

release-image:
  stage: Build and Release
  image: docker:24.0.2
  services:
    - docker:24.0.2-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --compress -t $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:$CI_COMMIT_SHORT_SHA -f ./docker/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:$CI_COMMIT_SHORT_SHA
      #when: manual


update_chart_manifest:
  stage: Update Chart
  image: docker:24.0.2
  services:
    - docker:24.0.2-dind
  only:
    - main
  needs:
    - release-image
  variables:
    GIT_STRATEGY: none
  retry: 2
  before_script:
    - *enable_ssh
  script:
    # Configure Git
    - git config --global user.name $APP_NAME
    - git config --global user.email $APP_NAME"@gitlab.com"
    - git clone --single-branch --branch main $CD_GIT_REPOSITORY
    - cd $CD_CHART_REPO
    - cd $CHART_FOLDER
    # HELM Update
    - >
      tag=$(cat values.yaml | grep tag: | awk '{print $2}')
    - sed -i "s/$tag/$CI_COMMIT_SHORT_SHA/" values.yaml
    - cat $CD_MANIFEST_FILE
    - cd ..
    - git commit -am "ðŸ”¥ update image tag" && git push origin main

